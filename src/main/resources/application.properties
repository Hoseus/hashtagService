# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/test

# Username and password
spring.datasource.username = root
spring.datasource.password = mysql

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

#Loglevel
logging.level.org.springframework.web: DEBUG

#Disable security, so tomcat doesn't ask for user and password
security.basic.enabled=false
management.security.enabled=false

#I like pretty things
spring.jackson.serialization.indent_output=true

# ===============================
# = JPA / HIBERNATE
# ===============================

#Create tables automatically
spring.jpa.hibernate.ddl-auto=update

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# ===============================
# = SERVER PORT
# ===============================
server.port=${port:8181}
